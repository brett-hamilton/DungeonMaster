// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace DungeonMaster.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\Jacob\Documents\Software project\DungeonMaster\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Jacob\Documents\Software project\DungeonMaster\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Jacob\Documents\Software project\DungeonMaster\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Jacob\Documents\Software project\DungeonMaster\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Jacob\Documents\Software project\DungeonMaster\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Jacob\Documents\Software project\DungeonMaster\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Jacob\Documents\Software project\DungeonMaster\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Jacob\Documents\Software project\DungeonMaster\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Jacob\Documents\Software project\DungeonMaster\_Imports.razor"
using DungeonMaster;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\Jacob\Documents\Software project\DungeonMaster\_Imports.razor"
using DungeonMaster.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Jacob\Documents\Software project\DungeonMaster\Pages\MeleeAttackTest.razor"
using DungeonMaster.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Jacob\Documents\Software project\DungeonMaster\Pages\MeleeAttackTest.razor"
using System.IO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Jacob\Documents\Software project\DungeonMaster\Pages\MeleeAttackTest.razor"
using System.Text.Json;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/MeleeAttackTest")]
    public partial class MeleeAttackTest : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 94 "C:\Users\Jacob\Documents\Software project\DungeonMaster\Pages\MeleeAttackTest.razor"
       
	/// <summary>
	/// If yes, indicates we should load character from file.
	/// </summary>
	protected string doLoadCharacter = "no";

	/// <summary>
	/// Path to characters file.
	/// </summary>
	public string path = "Saves/characters.json";

	/// <summary>
	/// Display string for status of loading character
	/// </summary>
	public string status = "Status: No character loaded.";

	/// <summary>
	/// Two players and game board, to simulate the combat section of our game.
	/// </summary>
	public Character player1 { get; set; } = new Character("Player 1", 50, 1);
	public Character player2 { get; set; } = new Character("Player 2", 50, 1);

	public List<string> GameLog { get; set; } = new List<string>();

	public Game testGame { get; set; } = new Game();

	/// <summary>
	/// String message with the result of the attack.
	/// </summary>
	private string attackResult = "";

	/// <summary>
	/// Method to restart or setup the game.
	/// </summary>
	public void SetupGame()
	{
		if (doLoadCharacter == "yes")
		{
			// Check if we are using a player from the characters file
			try
			{
				string jsonString = File.ReadAllText (path);
				player1 = JsonSerializer.Deserialize<Character> (jsonString);
			}
			catch (FileNotFoundException)
			{
				status = "Status: Character file not found. Please create a character using the character creation page.";
			}
			catch (IOException)
			{
				status = "Status: Error reading character file. Please create another character using the character creation page";
			}
			catch (Exception e)
			{
				status = "ERROR: " + e.Message;
			}

			// Use default for opponent
			player2 = new Character ("Player 2", 50, 1);

		}
		else
		{
			player1 = new Character ("Player 1", 50, 1);
			player2 = new Character ("Player 2", 50, 1);
		}

		testGame = new Game(player1, player2);
		attackResult = "";
		GameLog = new List<string>();


		StateHasChanged();
	}

	/// <summary>
	/// Method to show that our attack method works.
	/// </summary>
	public void AttackExample()
	{
		attackResult = testGame.MeleeAttackAttempt(player1, player2);
		GameLog.Add(attackResult);

	}

	/// <summary>
	/// Method to clear the game log.
	/// </summary>
	public void ClearLog()
	{
		GameLog = new List<string>();
	}


#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
